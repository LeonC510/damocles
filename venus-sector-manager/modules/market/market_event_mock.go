// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ipfs-force-community/venus-cluster/venus-sector-manager/modules/market (interfaces: IMarketEvent)

// Package market is a generated GoMock package.
package market

import (
	context "context"
	reflect "reflect"

	types "github.com/filecoin-project/venus/venus-shared/types"
	gateway "github.com/filecoin-project/venus/venus-shared/types/gateway"
	gomock "github.com/golang/mock/gomock"
)

// MockIMarketEvent is a mock of IMarketEvent interface.
type MockIMarketEvent struct {
	ctrl     *gomock.Controller
	recorder *MockIMarketEventMockRecorder
}

// MockIMarketEventMockRecorder is the mock recorder for MockIMarketEvent.
type MockIMarketEventMockRecorder struct {
	mock *MockIMarketEvent
}

// NewMockIMarketEvent creates a new mock instance.
func NewMockIMarketEvent(ctrl *gomock.Controller) *MockIMarketEvent {
	mock := &MockIMarketEvent{ctrl: ctrl}
	mock.recorder = &MockIMarketEventMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMarketEvent) EXPECT() *MockIMarketEventMockRecorder {
	return m.recorder
}

// OnUnseal mocks base method.
func (m *MockIMarketEvent) OnUnseal(arg0 func(context.Context, types.UUID, *gateway.UnsealRequest)) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OnUnseal", arg0)
}

// OnUnseal indicates an expected call of OnUnseal.
func (mr *MockIMarketEventMockRecorder) OnUnseal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnUnseal", reflect.TypeOf((*MockIMarketEvent)(nil).OnUnseal), arg0)
}

// RespondUnseal mocks base method.
func (m *MockIMarketEvent) RespondUnseal(arg0 context.Context, arg1 types.UUID, arg2 error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RespondUnseal", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// RespondUnseal indicates an expected call of RespondUnseal.
func (mr *MockIMarketEventMockRecorder) RespondUnseal(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RespondUnseal", reflect.TypeOf((*MockIMarketEvent)(nil).RespondUnseal), arg0, arg1, arg2)
}
